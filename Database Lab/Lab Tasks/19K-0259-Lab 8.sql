--Q1
SET SERVEROUTPUT ON;
DECLARE
BONUS NUMBER:=0;
EMPP_ID NUMBER :=0;
SAL NUMBER;
BEGIN
EMPP_ID := &EMPP_ID;
SELECT SALARY INTO SAL FROM HR.EMPLOYEES WHERE EMPLOYEE_ID =EMPP_ID;
IF (SAL < 1000 ) 
THEN 
BONUS := SAL*0.10;
ELSIF(SAL >= 1000 AND SAL < 1500 ) 
THEN 
BONUS := SAL*0.15;
ELSIF(SAL >= 1500  ) 
THEN
BONUS := SAL * 0.20;
ELSIF(SAL IS  NULL  ) 
THEN
BONUS := 0;
ELSE 
BONUS := 0;
END IF;
DBMS_OUTPUT.PUT_LINE('EMP_ID = ' || EMPP_ID || ' BONUS = ' || BONUS);
END;
-----------------------------------------------------------------------------------------
--Q2
SET SERVEROUTPUT ON;
DECLARE
BONUS NUMBER:=0;
EMP_ID NUMBER :=0;
SAL NUMBER;
COM HR.EMPLOYEES.COMMISSION_PCT%TYPE;
BEGIN
EMP_ID := &EMP_ID;
SELECT SALARY ,COMMISSION_PCT  INTO SAL,COM FROM HR.EMPLOYEES WHERE EMPLOYEE_ID = EMP_ID;
IF (COM IS NOT NULL) THEN
 SAL := SAL + (COM*SAL);
 UPDATE HR.EMPLOYEES SET SALARY = SAL WHERE EMPLOYEE_ID = EMP_ID;
 ELSE
    DBMS_OUTPUT.PUT_LINE('NO COMMISION');
END IF; 
END;
------------------------------------------------------------------------
--Q3
SET SERVEROUTPUT ON;
DECLARE
DEPT_NO HR.DEPARTMENTS.DEPARTMENT_ID%TYPE;
DNAME HR.DEPARTMENTS.DEPARTMENT_NAME%TYPE;
BEGIN
DEPT_NO := 30;
SELECT DEPARTMENT_NAME INTO DNAME FROM HR.DEPARTMENTS WHERE DEPARTMENT_ID = DEPT_NO;
DBMS_OUTPUT.PUT_LINE(DNAME);
END;
--------------------------------------------------------------------------
--Q4, Q5, Q6, Q7, Q8 are of functions and views so I have left them... !!
--------------------------------------------------------------------------
--Q9
SET SERVEROUTPUT ON;
DECLARE
NUM1 INTEGER;
NUM2 INTEGER;
RES INTEGER;
BEGIN
NUM1 := &NUM1;
NUM2 := &NUM2;
RES := NUM1 + NUM2;
DBMS_OUTPUT.PUT_LINE('result = ' || RES );
END;
----------------------------------------------------------------------------
--Q10
SET SERVEROUTPUT ON;
DECLARE
LB INTEGER;
UB INTEGER;
COUNTER INTEGER;
SUM1 INTEGER := 0;
BEGIN
LB := &LB;
UB := &UB;
COUNTER := LB;
WHILE COUNTER <= UB 
LOOP
    SUM1 := SUM1 + COUNTER;
    COUNTER := COUNTER + 1;
END LOOP;
DBMS_OUTPUT.PUT_LINE(SUM1);
END;
-------------------------------------------------------------------------
--Q11
SET SERVEROUTPUT ON;
DECLARE
EID HR.EMPLOYEES.EMPLOYEE_ID%TYPE;
BEGIN
EID := &EID;
FOR C IN (SELECT  E.FIRST_NAME || ' ' || E.LAST_NAME AS NAME , E.HIRE_DATE AS HIRED , D.DEPARTMENT_NAME AS D_NAME
FROM HR.EMPLOYEES E , HR.DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID AND E.EMPLOYEE_ID = EID
)
LOOP
DBMS_OUTPUT.PUT_LINE(C.NAME || ' ' ||C.HIRED || ' ' || C.D_NAME);
END LOOP;
END;
----------------------------------------------------------------------------
--Q12
SET SERVEROUTPUT ON;
DECLARE
NUM NUMBER;
C VARCHAR(10);
LEN INT := 0;
I INT := 0;
J INT := 0;
REV VARCHAR(10) := '';
P INT := 0;
BEGIN
NUM := &NUM;
I :=0;
J := LENGTH(C);
C := TO_CHAR(NUM);
DBMS_OUTPUT.PUT_LINE(SUBSTR(C,1,1));
FOR I IN REVERSE 1.. LENGTH(C) LOOP
        REV := REV
                || SUBSTR(C, I, 1);
END LOOP;
P:=1;
FOR I IN  1.. LENGTH(C) LOOP
        IF(SUBSTR(C, I, 1) != SUBSTR(REV, I,1))
        THEN
            P :=0;
        END IF;
END LOOP;
IF ( P = 0)
THEN
    DBMS_OUTPUT.PUT_LINE('NOT A PALINDROME');
ELSE
    DBMS_OUTPUT.PUT_LINE('PALINDROME');
END IF;
END;
----------------------------------------------------------------------------------
--Q13
SET SERVEROUTPUT ON;
DECLARE
E_ID HR.EMPLOYEES.EMPLOYEE_ID%TYPE;
F_NAME HR.EMPLOYEES.FIRST_NAME%TYPE;
L_NAME HR.EMPLOYEES.LAST_NAME%TYPE;
U_EMAIL HR.EMPLOYEES.EMAIL%TYPE;
U_PHONE_NUMBER HR.EMPLOYEES.PHONE_NUMBER%TYPE;
U_HIRE_DATE DATE;
U_JOB_ID HR.EMPLOYEES.JOB_ID%TYPE;
SAL HR.EMPLOYEES.SALARY%TYPE;
COMM HR.EMPLOYEES.COMMISSION_PCT%TYPE;
MAN HR.EMPLOYEES.MANAGER_ID%TYPE;
DEPT_NO HR.EMPLOYEES.DEPARTMENT_ID%TYPE;
BEGIN
E_ID := &E_ID;
F_NAME := &F_NAME;
L_NAME := &L_NAME;
U_EMAIL := &U_EMAIL;
U_PHONE_NUMBER := &U_PHONE_NUMBER;
U_HIRE_DATE := &U_HIRE_DATE;
U_JOB_ID := &U_JOB_ID;
SAL := &SAL;
COMM := &COMM;
MAN := &MAN;
DEPT_NO := &DEPT_NO;
INSERT INTO HR.EMPLOYEES VALUES(E_ID , F_NAME,L_NAME , U_EMAIL, U_PHONE_NUMBER , U_HIRE_DATE , U_JOB_ID , SAL , COMM , MAN , DEPT_NO);
DBMS_OUTPUT.PUT_LINE('UPDATED');
END;
--------------------------------------------------------------------------------------
--Q15
SET SERVEROUTPUT ON;
DECLARE
SUMM NUMBER :=0;
BEGIN
FOR I IN 1..100 LOOP
    SUMM := SUMM + I;
END LOOP;
DBMS_OUTPUT.PUT_LINE('Sum= ' || SUMM);